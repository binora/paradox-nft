{
    "contractName": "minter",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "contract paradox",
                    "name": "p",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "levelIndex",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes32",
                    "name": "guess",
                    "type": "bytes32"
                },
                {
                    "internalType": "uint256",
                    "name": "quantity",
                    "type": "uint256"
                }
            ],
            "name": "mint",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "paradoxAddress",
            "outputs": [
                {
                    "internalType": "contract paradox",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract paradox\",\"name\":\"p\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"levelIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"guess\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paradoxAddress\",\"outputs\":[{\"internalType\":\"contract paradox\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/binnyarora/projects/solidity/paradox-nft/ethereum/contracts/Minter.sol\":\"minter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/binnyarora/projects/solidity/paradox-nft/ethereum/contracts/Minter.sol\":{\"keccak256\":\"0xbb63da009b96f61a1ea3cc246647b2086bba35a6c240501617b22e1d6dcfd055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d049ad58617cf65d0ec6b809c39d4b13888219e605738ddf468b8c576fcf71b5\",\"dweb:/ipfs/QmfCnWh3mCqLuL1Dqdp31NNMjdACiN42tsRsxLME6yq5iy\"]},\"/Users/binnyarora/projects/solidity/paradox-nft/ethereum/contracts/Paradox.sol\":{\"keccak256\":\"0xbec21263866215e4b616c2a6911981652b19b738d1d5690e59c3cc09ab9166aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a05060fc3d7cdcce4eaa32931798b705baf9d28b76e4b15bda70b1a575bee23\",\"dweb:/ipfs/QmNmNZKHJihiqqL9FNkWmG85aNGQSWvLqrbqeeTg27sDnG\"]},\"/Users/binnyarora/projects/solidity/paradox-nft/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"/Users/binnyarora/projects/solidity/paradox-nft/node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"/Users/binnyarora/projects/solidity/paradox-nft/node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]},\"/Users/binnyarora/projects/solidity/paradox-nft/node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x483f88fbbb1d6d75000fbe8ce14279b5e6121cd5a29ff5f1b91fed407735a6c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51cbe83f9ccd8619d58ca5458ff49c470c656a45856b0e7435eebf5f5d431bf1\",\"dweb:/ipfs/QmZwR7nwu4hzVJW2m3JTPyjUopoxZUxjYLSgcSK5D4F7E2\"]},\"/Users/binnyarora/projects/solidity/paradox-nft/node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"/Users/binnyarora/projects/solidity/paradox-nft/node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"/Users/binnyarora/projects/solidity/paradox-nft/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"/Users/binnyarora/projects/solidity/paradox-nft/node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"/Users/binnyarora/projects/solidity/paradox-nft/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"/Users/binnyarora/projects/solidity/paradox-nft/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"/Users/binnyarora/projects/solidity/paradox-nft/node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"/Users/binnyarora/projects/solidity/paradox-nft/node_modules/erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0x03219979b4b1533de27227116722b32bae0f2779b19a1336b6ddea2fe5b34f90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84415887bd39271b6744e8e92dd337c06f05b2c42f594af02dc4ebe46a5aa814\",\"dweb:/ipfs/QmajpsE8fuEj7TrAADz6CTGwWvmkSk2LFZas4aUB3LeWuc\"]}},\"version\":1}",
    "bytecode": "608060405234801561001057600080fd5b5060405161029f38038061029f83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b61020c806100936000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80630fe7fa331461003b5780636fa136991461006b575b600080fd5b60005461004e906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61007e610079366004610155565b61008e565b6040519015158152602001610062565b60008054604051636fa1369960e01b81526004810186905260248101859052604481018490526001600160a01b0390911690636fa1369990606401600060405180830381600087803b1580156100e357600080fd5b505af19250505080156100f4575060015b61014b573d808015610122576040519150601f19603f3d011682016040523d82523d6000602084013e610127565b606091505b508060405162461bcd60e51b81526004016101429190610181565b60405180910390fd5b5060019392505050565b60008060006060848603121561016a57600080fd5b505081359360208301359350604090920135919050565b600060208083528351808285015260005b818110156101ae57858101830151858201604001528201610192565b818111156101c0576000604083870101525b50601f01601f191692909201604001939250505056fea26469706673582212204c61b44fb94160485433cfbf485808dc1088c98d9ba07b6767754265bbc582e664736f6c634300080b0033",
    "deployedBytecode": "608060405234801561001057600080fd5b50600436106100365760003560e01c80630fe7fa331461003b5780636fa136991461006b575b600080fd5b60005461004e906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61007e610079366004610155565b61008e565b6040519015158152602001610062565b60008054604051636fa1369960e01b81526004810186905260248101859052604481018490526001600160a01b0390911690636fa1369990606401600060405180830381600087803b1580156100e357600080fd5b505af19250505080156100f4575060015b61014b573d808015610122576040519150601f19603f3d011682016040523d82523d6000602084013e610127565b606091505b508060405162461bcd60e51b81526004016101429190610181565b60405180910390fd5b5060019392505050565b60008060006060848603121561016a57600080fd5b505081359360208301359350604090920135919050565b600060208083528351808285015260005b818110156101ae57858101830151858201604001528201610192565b818111156101c0576000604083870101525b50601f01601f191692909201604001939250505056fea26469706673582212204c61b44fb94160485433cfbf485808dc1088c98d9ba07b6767754265bbc582e664736f6c634300080b0033",
    "sourceMap": "82:380:0:-:0;;;141:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;174:14;:18;;-1:-1:-1;;;;;;174:18:0;-1:-1:-1;;;;;174:18:0;;;;;;;;;;82:380;;14:305:14;99:6;152:2;140:9;131:7;127:23;123:32;120:52;;;168:1;165;158:12;120:52;194:16;;-1:-1:-1;;;;;239:31:14;;229:42;;219:70;;285:1;282;275:12;219:70;308:5;14:305;-1:-1:-1;;;14:305:14:o;:::-;82:380:0;;;;;;",
    "deployedSourceMap": "82:380:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;105:29;;;;;-1:-1:-1;;;;;105:29:0;;;;;;-1:-1:-1;;;;;193:32:14;;;175:51;;163:2;148:18;105:29:0;;;;;;;;205:254;;;;;;:::i;:::-;;:::i;:::-;;;723:14:14;;716:22;698:41;;686:2;671:18;205:254:0;558:187:14;205:254:0;282:4;302:14;;:48;;-1:-1:-1;;;302:48:0;;;;;952:25:14;;;993:18;;;986:34;;;1036:18;;;1029:34;;;-1:-1:-1;;;;;302:14:0;;;;:19;;925:18:14;;302:48:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;298:155;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;439:1;425:17;;-1:-1:-1;;;425:17:0;;;;;;;;:::i;:::-;;;;;;;;298:155;-1:-1:-1;372:4:0;205:254;;;;;:::o;237:316:14:-;314:6;322;330;383:2;371:9;362:7;358:23;354:32;351:52;;;399:1;396;389:12;351:52;-1:-1:-1;;422:23:14;;;492:2;477:18;;464:32;;-1:-1:-1;543:2:14;528:18;;;515:32;;237:316;-1:-1:-1;237:316:14:o;1074:597::-;1186:4;1215:2;1244;1233:9;1226:21;1276:6;1270:13;1319:6;1314:2;1303:9;1299:18;1292:34;1344:1;1354:140;1368:6;1365:1;1362:13;1354:140;;;1463:14;;;1459:23;;1453:30;1429:17;;;1448:2;1425:26;1418:66;1383:10;;1354:140;;;1512:6;1509:1;1506:13;1503:91;;;1582:1;1577:2;1568:6;1557:9;1553:22;1549:31;1542:42;1503:91;-1:-1:-1;1655:2:14;1634:15;-1:-1:-1;;1630:29:14;1615:45;;;;1662:2;1611:54;;1074:597;-1:-1:-1;;;1074:597:14:o",
    "sourcePath": "/Users/binnyarora/projects/solidity/paradox-nft/ethereum/contracts/Minter.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.11+commit.d7f03943"
    },
    "ast": {
        "absolutePath": "/Users/binnyarora/projects/solidity/paradox-nft/ethereum/contracts/Minter.sol",
        "exportedSymbols": {
            "Address": [
                1279
            ],
            "Context": [
                1301
            ],
            "ERC165": [
                1528
            ],
            "ERC721A": [
                2923
            ],
            "IERC165": [
                1540
            ],
            "IERC721": [
                906
            ],
            "IERC721Enumerable": [
                955
            ],
            "IERC721Metadata": [
                982
            ],
            "IERC721Receiver": [
                924
            ],
            "Ownable": [
                790
            ],
            "SafeMath": [
                1852
            ],
            "Strings": [
                1504
            ],
            "minter": [
                52
            ],
            "paradox": [
                685
            ]
        },
        "id": 53,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1,
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "32:23:0"
            },
            {
                "absolutePath": "/Users/binnyarora/projects/solidity/paradox-nft/ethereum/contracts/Paradox.sol",
                "file": "./Paradox.sol",
                "id": 2,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 53,
                "sourceUnit": 686,
                "src": "57:23:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [],
                "canonicalName": "minter",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 52,
                "linearizedBaseContracts": [
                    52
                ],
                "name": "minter",
                "nameLocation": "91:6:0",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "constant": false,
                        "functionSelector": "0fe7fa33",
                        "id": 5,
                        "mutability": "mutable",
                        "name": "paradoxAddress",
                        "nameLocation": "120:14:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 52,
                        "src": "105:29:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_contract$_paradox_$685",
                            "typeString": "contract paradox"
                        },
                        "typeName": {
                            "id": 4,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                                "id": 3,
                                "name": "paradox",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 685,
                                "src": "105:7:0"
                            },
                            "referencedDeclaration": 685,
                            "src": "105:7:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_paradox_$685",
                                "typeString": "contract paradox"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 15,
                            "nodeType": "Block",
                            "src": "164:35:0",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 13,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 11,
                                            "name": "paradoxAddress",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 5,
                                            "src": "174:14:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_paradox_$685",
                                                "typeString": "contract paradox"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 12,
                                            "name": "p",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 8,
                                            "src": "191:1:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_paradox_$685",
                                                "typeString": "contract paradox"
                                            }
                                        },
                                        "src": "174:18:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_paradox_$685",
                                            "typeString": "contract paradox"
                                        }
                                    },
                                    "id": 14,
                                    "nodeType": "ExpressionStatement",
                                    "src": "174:18:0"
                                }
                            ]
                        },
                        "id": 16,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 9,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 8,
                                    "mutability": "mutable",
                                    "name": "p",
                                    "nameLocation": "161:1:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 16,
                                    "src": "153:9:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_paradox_$685",
                                        "typeString": "contract paradox"
                                    },
                                    "typeName": {
                                        "id": 7,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 6,
                                            "name": "paradox",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 685,
                                            "src": "153:7:0"
                                        },
                                        "referencedDeclaration": 685,
                                        "src": "153:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_paradox_$685",
                                            "typeString": "contract paradox"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "152:11:0"
                        },
                        "returnParameters": {
                            "id": 10,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "164:0:0"
                        },
                        "scope": 52,
                        "src": "141:58:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 50,
                            "nodeType": "Block",
                            "src": "288:171:0",
                            "statements": [
                                {
                                    "clauses": [
                                        {
                                            "block": {
                                                "id": 35,
                                                "nodeType": "Block",
                                                "src": "351:36:0",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "hexValue": "74727565",
                                                            "id": 33,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "bool",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "372:4:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            },
                                                            "value": "true"
                                                        },
                                                        "functionReturnParameters": 26,
                                                        "id": 34,
                                                        "nodeType": "Return",
                                                        "src": "365:11:0"
                                                    }
                                                ]
                                            },
                                            "errorName": "",
                                            "id": 36,
                                            "nodeType": "TryCatchClause",
                                            "src": "351:36:0"
                                        },
                                        {
                                            "block": {
                                                "id": 47,
                                                "nodeType": "Block",
                                                "src": "411:42:0",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "id": 43,
                                                                            "name": "s",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 38,
                                                                            "src": "439:1:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                                                "typeString": "bytes memory"
                                                                            }
                                                                        }
                                                                    ],
                                                                    "expression": {
                                                                        "argumentTypes": [
                                                                            {
                                                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                                                "typeString": "bytes memory"
                                                                            }
                                                                        ],
                                                                        "id": 42,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": true,
                                                                        "lValueRequested": false,
                                                                        "nodeType": "ElementaryTypeNameExpression",
                                                                        "src": "432:6:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                                                            "typeString": "type(string storage pointer)"
                                                                        },
                                                                        "typeName": {
                                                                            "id": 41,
                                                                            "name": "string",
                                                                            "nodeType": "ElementaryTypeName",
                                                                            "src": "432:6:0",
                                                                            "typeDescriptions": {}
                                                                        }
                                                                    },
                                                                    "id": 44,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "kind": "typeConversion",
                                                                    "lValueRequested": false,
                                                                    "names": [],
                                                                    "nodeType": "FunctionCall",
                                                                    "src": "432:9:0",
                                                                    "tryCall": false,
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_string_memory_ptr",
                                                                        "typeString": "string memory"
                                                                    }
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_string_memory_ptr",
                                                                        "typeString": "string memory"
                                                                    }
                                                                ],
                                                                "id": 40,
                                                                "name": "revert",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [
                                                                    4294967277,
                                                                    4294967277
                                                                ],
                                                                "referencedDeclaration": 4294967277,
                                                                "src": "425:6:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                                                    "typeString": "function (string memory) pure"
                                                                }
                                                            },
                                                            "id": 45,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "425:17:0",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_tuple$__$",
                                                                "typeString": "tuple()"
                                                            }
                                                        },
                                                        "id": 46,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "425:17:0"
                                                    }
                                                ]
                                            },
                                            "errorName": "",
                                            "id": 48,
                                            "nodeType": "TryCatchClause",
                                            "parameters": {
                                                "id": 39,
                                                "nodeType": "ParameterList",
                                                "parameters": [
                                                    {
                                                        "constant": false,
                                                        "id": 38,
                                                        "mutability": "mutable",
                                                        "name": "s",
                                                        "nameLocation": "408:1:0",
                                                        "nodeType": "VariableDeclaration",
                                                        "scope": 48,
                                                        "src": "395:14:0",
                                                        "stateVariable": false,
                                                        "storageLocation": "memory",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes_memory_ptr",
                                                            "typeString": "bytes"
                                                        },
                                                        "typeName": {
                                                            "id": 37,
                                                            "name": "bytes",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "395:5:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bytes_storage_ptr",
                                                                "typeString": "bytes"
                                                            }
                                                        },
                                                        "visibility": "internal"
                                                    }
                                                ],
                                                "src": "394:16:0"
                                            },
                                            "src": "388:65:0"
                                        }
                                    ],
                                    "externalCall": {
                                        "arguments": [
                                            {
                                                "id": 29,
                                                "name": "levelIndex",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 18,
                                                "src": "322:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            {
                                                "id": 30,
                                                "name": "guess",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 20,
                                                "src": "334:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                }
                                            },
                                            {
                                                "id": 31,
                                                "name": "quantity",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 22,
                                                "src": "341:8:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 27,
                                                "name": "paradoxAddress",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 5,
                                                "src": "302:14:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_paradox_$685",
                                                    "typeString": "contract paradox"
                                                }
                                            },
                                            "id": 28,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "mint",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 641,
                                            "src": "302:19:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_bytes32_$_t_uint256_$returns$__$",
                                                "typeString": "function (uint256,bytes32,uint256) payable external"
                                            }
                                        },
                                        "id": 32,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "302:48:0",
                                        "tryCall": true,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 49,
                                    "nodeType": "TryStatement",
                                    "src": "298:155:0"
                                }
                            ]
                        },
                        "functionSelector": "6fa13699",
                        "id": 51,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "mint",
                        "nameLocation": "214:4:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 23,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 18,
                                    "mutability": "mutable",
                                    "name": "levelIndex",
                                    "nameLocation": "224:10:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 51,
                                    "src": "219:15:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 17,
                                        "name": "uint",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "219:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 20,
                                    "mutability": "mutable",
                                    "name": "guess",
                                    "nameLocation": "244:5:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 51,
                                    "src": "236:13:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                    },
                                    "typeName": {
                                        "id": 19,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "236:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 22,
                                    "mutability": "mutable",
                                    "name": "quantity",
                                    "nameLocation": "256:8:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 51,
                                    "src": "251:13:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 21,
                                        "name": "uint",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "251:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "218:47:0"
                        },
                        "returnParameters": {
                            "id": 26,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 25,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 51,
                                    "src": "282:4:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    },
                                    "typeName": {
                                        "id": 24,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "282:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "281:6:0"
                        },
                        "scope": 52,
                        "src": "205:254:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    }
                ],
                "scope": 53,
                "src": "82:380:0",
                "usedErrors": []
            }
        ],
        "src": "32:430:0"
    },
    "functionHashes": {
        "mint(uint256,bytes32,uint256)": "6fa13699",
        "paradoxAddress()": "0fe7fa33"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "104800",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "mint(uint256,bytes32,uint256)": "infinite",
            "paradoxAddress()": "2304"
        }
    }
}